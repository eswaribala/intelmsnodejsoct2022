{"version":3,"file":"git-clone-id.js","sourceRoot":"","sources":["../../src/git-clone-id.ts"],"names":[],"mappings":";;;AAAA,+BAAoC;AACpC,qDAAqD;AAErD,MAAM,aAAa,GAAG,iCAAiC,CAAC;AAExD,MAAM,aAAa,GAAG,GAAuB,EAAE;IAC3C,OAAO,kCAAiB,CAAC,sBAAsB,aAAa,EAAE,CAAC,CAAC;AACpE,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,EAAE;IACrC,OAAO,kCAAiB,CAAC,sBAAsB,aAAa,IAAI,KAAK,EAAE,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEK,MAAM,UAAU,GAAG,GAAuB,EAAE;IAC/C,MAAM,iBAAiB,GAAG,aAAa,EAAE,CAAC;IAC1C,IAAI,iBAAiB;QAAE,OAAO,iBAAiB,CAAC;IAEhD,MAAM,KAAK,GAAG,SAAM,EAAE,CAAC;IACvB,cAAc,CAAC,KAAK,CAAC,CAAC;IACtB,OAAO,aAAa,EAAE,CAAC;AAC3B,CAAC,CAAC;AAPW,QAAA,UAAU,cAOrB","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { executeGitCommand } from './fecth-git-data';\n\nconst gitConfigName = 'opentelemetry.resource.clone.id';\n\nconst readGitConfig = (): string | undefined => {\n    return executeGitCommand(`git config --local ${gitConfigName}`);\n};\n\nconst writeGitConfig = (value: string) => {\n    return executeGitCommand(`git config --local ${gitConfigName} ${value}`);\n};\n\nexport const getCloneId = (): string | undefined => {\n    const aspectoGitCloneId = readGitConfig();\n    if (aspectoGitCloneId) return aspectoGitCloneId;\n\n    const newId = uuidv4();\n    writeGitConfig(newId);\n    return readGitConfig();\n};\n"]}