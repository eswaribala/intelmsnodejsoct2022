{"version":3,"file":"persist-on-post-install.js","sourceRoot":"","sources":["../../src/persist-on-post-install.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAoC;AACpC,4CAAoB;AACpB,mCAA8C;AAE9C;;;;;;;;;;;;;GAaG;AACI,MAAM,4BAA4B,GAAG,GAAG,EAAE;IAC7C,MAAM,QAAQ,GAAG,kBAAe,CAAC,0BAA0B,EAAE,CAAC;IAC9D,YAAE,CAAC,aAAa,CAAC,KAAK,2BAAmB,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/F,CAAC,CAAC;AAHW,QAAA,4BAA4B,gCAGvC;AAEF,oCAA4B,EAAE,CAAC","sourcesContent":["import { gitSyncDetector } from '.';\nimport fs from 'fs';\nimport { postInstallFileName } from './types';\n\n/**\n * Sometimes git database is not available at runtime.\n * Example:\n * - In CI, repo is cloned and built\n * - Code is copied into a docker image which will later run in production.\n *      Since .git folder is not needed at runtime, and it can increase docker image size,\n *      it is not copied to the docker.\n *      node_modules dir is used at runtime and copied to image.\n *\n * We want to be able to have the git data in this case as well.\n * What we do is hooking into the npm install process, running a script at postinstall,\n * which will calculate the resource attributes at the point in time when we do have\n * the .git db, store it into node_modules, and read resource from it later at runtime.\n */\nexport const persistResourceOnPostInstall = () => {\n    const resource = gitSyncDetector.createGitResourceFromGitDb();\n    fs.writeFileSync(`./${postInstallFileName}`, JSON.stringify(resource.attributes, null, 2));\n};\n\npersistResourceOnPostInstall();\n"]}