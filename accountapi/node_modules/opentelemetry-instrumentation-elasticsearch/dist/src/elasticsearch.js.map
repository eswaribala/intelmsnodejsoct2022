{"version":3,"file":"elasticsearch.js","sourceRoot":"","sources":["../../src/elasticsearch.ts"],"names":[],"mappings":"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","sourcesContent":["import { diag, context, trace, Span } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type elasticsearch from '@elastic/elasticsearch';\nimport { ElasticsearchInstrumentationConfig } from './types';\nimport {\n    InstrumentationBase,\n    InstrumentationModuleDefinition,\n    InstrumentationNodeModuleDefinition,\n    InstrumentationNodeModuleFile,\n} from '@opentelemetry/instrumentation';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport {\n    startSpan,\n    onError,\n    onResponse,\n    defaultDbStatementSerializer,\n    normalizeArguments,\n    getIndexName,\n} from './utils';\nimport { ELASTICSEARCH_API_FILES } from './helpers';\n\nexport class ElasticsearchInstrumentation extends InstrumentationBase<typeof elasticsearch> {\n    static readonly component = '@elastic/elasticsearch';\n\n    protected override _config: ElasticsearchInstrumentationConfig;\n    private _isEnabled = false;\n    private moduleVersion: string;\n\n    constructor(config: ElasticsearchInstrumentationConfig = {}) {\n        super('opentelemetry-instrumentation-elasticsearch', VERSION, Object.assign({}, config));\n    }\n\n    override setConfig(config: ElasticsearchInstrumentationConfig = {}) {\n        this._config = Object.assign({}, config);\n    }\n\n    protected init(): InstrumentationModuleDefinition<typeof elasticsearch> {\n        const apiModuleFiles = ELASTICSEARCH_API_FILES.map(\n            ({ path, operationClassName }) =>\n                new InstrumentationNodeModuleFile<any>(\n                    `@elastic/elasticsearch/api/${path}`,\n                    ['>=5 <8'],\n                    this.patch.bind(this, operationClassName),\n                    this.unpatch.bind(this)\n                )\n        );\n\n        const module = new InstrumentationNodeModuleDefinition<typeof elasticsearch>(\n            ElasticsearchInstrumentation.component,\n            ['*'],\n            undefined,\n            undefined,\n            apiModuleFiles\n        );\n\n        return module;\n    }\n\n    private patchObject(operationClassName: string, object) {\n        Object.keys(object).forEach((functionName) => {\n            if (typeof object[functionName] === 'object') {\n                this.patchObject(functionName, object[functionName]);\n            } else {\n                this._wrap(object, functionName, this.wrappedApiRequest.bind(this, operationClassName, functionName));\n            }\n        });\n    }\n\n    protected patch(operationClassName: string, moduleExports, moduleVersion: string) {\n        diag.debug(`elasticsearch instrumentation: patch elasticsearch ${operationClassName}.`);\n        this.moduleVersion = moduleVersion;\n        this._isEnabled = true;\n\n        const modulePrototypeKeys = Object.keys(moduleExports.prototype);\n        if (modulePrototypeKeys.length > 0) {\n            modulePrototypeKeys.forEach((functionName) => {\n                this._wrap(\n                    moduleExports.prototype,\n                    functionName,\n                    this.wrappedApiRequest.bind(this, operationClassName, functionName)\n                );\n            });\n            return moduleExports;\n        }\n\n        // For versions <= 7.9.0\n        const self = this;\n        return function (opts) {\n            const module = moduleExports(opts);\n            self.patchObject(operationClassName, module);\n            return module;\n        };\n    }\n\n    protected unpatch(moduleExports) {\n        diag.debug(`elasticsearch instrumentation: unpatch elasticsearch.`);\n        this._isEnabled = false;\n\n        const modulePrototypeKeys = Object.keys(moduleExports.prototype);\n        if (modulePrototypeKeys.length > 0) {\n            modulePrototypeKeys.forEach((functionName) => {\n                this._unwrap(moduleExports.prototype, functionName);\n            });\n        } else {\n            // Unable to unwrap function for versions <= 7.9.0. Using _isEnabled flag instead.\n        }\n    }\n\n    private wrappedApiRequest(apiClassName: string, functionName: string, originalFunction: Function) {\n        const self = this;\n        return function (...args) {\n            if (!self._isEnabled) {\n                return originalFunction.apply(this, args);\n            }\n\n            const [params, options, originalCallback] = normalizeArguments(args[0], args[1], args[2]);\n            const operation = `${apiClassName}.${functionName}`;\n            const span = startSpan({\n                tracer: self.tracer,\n                attributes: {\n                    [SemanticAttributes.DB_OPERATION]: operation,\n                    [AttributeNames.ELASTICSEARCH_INDICES]: getIndexName(params),\n                    [SemanticAttributes.DB_STATEMENT]: (\n                        self._config.dbStatementSerializer || defaultDbStatementSerializer\n                    )(operation, params, options),\n                },\n            });\n            self._addModuleVersionIfNeeded(span);\n\n            if (originalCallback) {\n                const wrappedCallback = function (err, result) {\n                    if (err) {\n                        onError(span, err);\n                    } else {\n                        onResponse(span, result, self._config.responseHook);\n                    }\n\n                    return originalCallback.call(this, err, result);\n                };\n\n                return self._callOriginalFunction(span, () =>\n                    originalFunction.call(this, params, options, wrappedCallback)\n                );\n            } else {\n                const promise = self._callOriginalFunction(span, () => originalFunction.apply(this, args));\n                promise.then(\n                    (result) => {\n                        onResponse(span, result, self._config.responseHook);\n                        return result;\n                    },\n                    (err) => {\n                        onError(span, err);\n                        return err;\n                    }\n                );\n\n                return promise;\n            }\n        };\n    }\n\n    private _callOriginalFunction<T>(span: Span, originalFunction: (...args: any[]) => T): T {\n        if (this._config?.suppressInternalInstrumentation) {\n            return context.with(suppressTracing(context.active()), originalFunction);\n        } else {\n            const activeContextWithSpan = trace.setSpan(context.active(), span);\n            return context.with(activeContextWithSpan, originalFunction);\n        }\n    }\n\n    private _addModuleVersionIfNeeded(span: Span) {\n        if (this._config.moduleVersionAttributeName) {\n            span.setAttribute(this._config.moduleVersionAttributeName, this.moduleVersion);\n        }\n    }\n}\n"]}