import { Tracer, SpanAttributes, Span } from '@opentelemetry/api';
import { DbStatementSerializer, ResponseHook } from './types';
import { ApiResponse } from '@elastic/elasticsearch/lib/Transport';
interface StartSpanPayload {
    tracer: Tracer;
    attributes: SpanAttributes;
}
export declare function getIndexName(params: any): any;
export declare function startSpan({ tracer, attributes }: StartSpanPayload): Span;
export declare function normalizeArguments(params: any, options: any, callback: any): any[];
export declare function getPort(port: string, protocol: string): string;
export declare function getNetAttributes(url: string): SpanAttributes;
export declare function onResponse(span: Span, result: ApiResponse, responseHook?: ResponseHook): void;
export declare function onError(span: Span, err: any): void;
export declare const defaultDbStatementSerializer: DbStatementSerializer;
export {};
//# sourceMappingURL=utils.d.ts.map