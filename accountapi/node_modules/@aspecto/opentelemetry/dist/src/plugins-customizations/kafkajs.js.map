{"version":3,"file":"kafkajs.js","sourceRoot":"","sources":["../../../src/plugins-customizations/kafkajs.ts"],"names":[],"mappings":";;;AACA,qDAA0D;AAE1D,oEAAoE;AAMpE,MAAM,cAAc,GAAG,CAAC,IAAU,EAAE,MAAc,EAAE,OAAuB,EAAE,EAAE;IAC3E,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;QACvD,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KACpE;AACL,CAAC,CAAC;AAEW,QAAA,0BAA0B,GAAiC;IACpE,YAAY,EAAE,uCAAsB,CAAC,cAAc,CAAC;IACpD,YAAY,EAAE,uCAAsB,CAAC,cAAc,CAAC;IACpD,0BAA0B,EAAE,0CAAqB,CAAC,cAAc;CACnE,CAAC","sourcesContent":["import { Span } from '@opentelemetry/api';\nimport { callCapturePayloadHook } from './recording-span';\nimport { KafkaJsInstrumentationConfig } from 'opentelemetry-instrumentation-kafkajs';\nimport { AspectoAttributeNames } from '@aspecto/opentelemetry-base';\n\nexport interface KafkaJsMessage {\n    value: Buffer | string | null;\n}\n\nconst addPayloadHook = (span: Span, _topic: string, message: KafkaJsMessage) => {\n    if (message.value !== null && message.value !== undefined) {\n        span.setAttribute('messaging.payload', message.value.toString());\n    }\n};\n\nexport const aspectoKafkaJsPluginConfig: KafkaJsInstrumentationConfig = {\n    producerHook: callCapturePayloadHook(addPayloadHook),\n    consumerHook: callCapturePayloadHook(addPayloadHook),\n    moduleVersionAttributeName: AspectoAttributeNames.MODULE_VERSION,\n};\n"]}