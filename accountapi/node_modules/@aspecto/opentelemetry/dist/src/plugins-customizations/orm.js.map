{"version":3,"file":"orm.js","sourceRoot":"","sources":["../../../src/plugins-customizations/orm.ts"],"names":[],"mappings":";;;AAGA,qDAA0D;AAC1D,oEAAoE;AAEpE,MAAM,kBAAkB,GAAG,CAAC,IAAU,EAAE,QAAa,EAAE,EAAE;IACrD,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7C,IAAI,CAAC,WAAW;QAAE,OAAO;IAEzB,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC1D,kBAAkB;IAClB,IAAI,UAAU,GAAG,MAAM;QAAE,OAAO;IAEhC,IAAI,CAAC,YAAY,CAAC,0CAAqB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AACtE,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAiC;IAC7D,YAAY,EAAE,uCAAsB,CAAC,kBAAkB,CAAC;IACxD,0BAA0B,EAAE,0CAAqB,CAAC,cAAc;IAChE,iBAAiB,EAAE,IAAI;CAC1B,CAAC;AAEW,QAAA,qBAAqB,GAAmC;IACjE,YAAY,EAAE,uCAAsB,CAAC,kBAAkB,CAAC;IACxD,0BAA0B,EAAE,0CAAqB,CAAC,cAAc;IAChE,mBAAmB,EAAE,IAAI;CAC5B,CAAC","sourcesContent":["import { Span } from '@opentelemetry/api';\nimport { SequelizeInstrumentationConfig } from 'opentelemetry-instrumentation-sequelize';\nimport { TypeormInstrumentationConfig } from 'opentelemetry-instrumentation-typeorm';\nimport { callCapturePayloadHook } from './recording-span';\nimport { AspectoAttributeNames } from '@aspecto/opentelemetry-base';\n\nconst addResponsePayload = (span: Span, response: any) => {\n    const stringified = JSON.stringify(response);\n    if (!stringified) return;\n\n    const binarySize = Buffer.byteLength(stringified, 'utf8');\n    // Limit to 0.5MB.\n    if (binarySize > 500000) return;\n\n    span.setAttribute(AspectoAttributeNames.DB_RESPONSE, stringified);\n};\n\nexport const typeormPluginConfig: TypeormInstrumentationConfig = {\n    responseHook: callCapturePayloadHook(addResponsePayload),\n    moduleVersionAttributeName: AspectoAttributeNames.MODULE_VERSION,\n    collectParameters: true,\n};\n\nexport const sequelizePluginConfig: SequelizeInstrumentationConfig = {\n    responseHook: callCapturePayloadHook(addResponsePayload),\n    moduleVersionAttributeName: AspectoAttributeNames.MODULE_VERSION,\n    ignoreOrphanedSpans: true,\n};\n"]}