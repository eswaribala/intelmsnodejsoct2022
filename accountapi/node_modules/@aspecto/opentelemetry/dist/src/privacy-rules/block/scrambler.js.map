{"version":3,"file":"scrambler.js","sourceRoot":"","sources":["../../../../src/privacy-rules/block/scrambler.ts"],"names":[],"mappings":";;;AAAa,QAAA,QAAQ,GAAG,CAAC,KAAU,EAAO,EAAE;IACxC,QAAQ,OAAO,KAAK,EAAE;QAClB,KAAK,WAAW,CAAC;QACjB,KAAK,SAAS;YACV,OAAO,KAAK,CAAC;QACjB,KAAK,QAAQ;YACT,OAAO,MAAM,CAAC,UAAU,CAAC,gBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtD,KAAK,QAAQ;YACT,IAAI,KAAK,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;YACjC,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAChC,KAAK,CAAC,GAAG,CAAC,GAAG,gBAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACrC;YACD,OAAO,KAAK,CAAC;QACjB;YACI,OAAO,MAAM,CAAC,KAAK,CAAC;iBACf,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC;iBACjC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;KAClD;AACL,CAAC,CAAC","sourcesContent":["export const scramble = (value: any): any => {\n    switch (typeof value) {\n        case 'undefined':\n        case 'boolean':\n            return value;\n        case 'number':\n            return Number.parseFloat(scramble(String(value)));\n        case 'object':\n            if (value === null) return value;\n            for (let key of Object.keys(value)) {\n                value[key] = scramble(value[key]);\n            }\n            return value;\n        default:\n            return String(value)\n                .replace(/\\p{Alphabetic}/giu, 'x')\n                .replace(/\\p{Decimal_Number}/giu, '1');\n    }\n};\n"]}