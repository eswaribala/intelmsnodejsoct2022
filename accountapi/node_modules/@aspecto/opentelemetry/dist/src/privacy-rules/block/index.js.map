{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/privacy-rules/block/index.ts"],"names":[],"mappings":";;;AACA,6CAA8C;AAC9C,uCAA2C;AAK3C,MAAa,SAAS;IAClB,UAAU,CAAC,IAAkB,EAAE,UAAgC;QAC3D,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAChD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,aAAa,CAAC,OAAqB,EAAE,IAAkB,EAAE,UAAgC;QACrF,OAAO,wBAAc,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IACrD,CAAC;IACD,cAAc,CAAC,SAAwB,EAAE,IAAkB;QACvD,OAAO,2BAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;CACJ;AAZD,8BAYC","sourcesContent":["import { DataCollectionAction } from '../types/DataCollection';\nimport { checkCondition } from './conditions';\nimport { executeActions } from './actions';\nimport { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport { RuleAction, RuleCondition } from '../types/PrivacyRule';\nimport { ActionResult } from '../ActionResult';\n\nexport class BlockList implements DataCollectionAction {\n    updateSpan(span: ReadableSpan, properties?: Record<string, any>): void {\n        Object.entries(properties).forEach(([key, value]) => {\n            span.attributes[key] = JSON.stringify(value);\n        });\n    }\n    executeAction(actions: RuleAction[], span: ReadableSpan, properties?: Record<string, any>): ActionResult {\n        return executeActions(actions, span, properties);\n    }\n    checkCondition(condition: RuleCondition, span: ReadableSpan) {\n        return checkCondition(condition, span);\n    }\n}\n"]}