{"version":3,"file":"AspectoHttpTraceContext.js","sourceRoot":"","sources":["../../../src/context/AspectoHttpTraceContext.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    trace,\n    Context,\n    TextMapPropagator,\n    SpanContext,\n    TraceFlags,\n    TextMapGetter,\n    TextMapSetter,\n} from '@opentelemetry/api';\nimport { TraceState } from '@opentelemetry/core';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const ASPECTO_TRACE_PARENT_HEADER = 'aspecto-traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART_COUNT = 4; // Version 00 only allows the specific 4 fields.\n\nconst VERSION_REGEX = /^(?!ff)[\\da-f]{2}$/;\nconst TRACE_ID_REGEX = /^(?![0]{32})[\\da-f]{32}$/;\nconst PARENT_ID_REGEX = /^(?![0]{16})[\\da-f]{16}$/;\nconst FLAGS_REGEX = /^[\\da-f]{2}$/;\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n    const trimmed = traceParent.trim();\n    const traceParentParts = trimmed.split('-');\n\n    // Current version must be structured correctly.\n    // For future versions, we can grab just the parts we do support.\n    if (traceParentParts[0] === VERSION && traceParentParts.length !== VERSION_PART_COUNT) {\n        return null;\n    }\n\n    const [version, traceId, parentId, flags] = traceParentParts;\n    const isValidParent =\n        VERSION_REGEX.test(version) &&\n        TRACE_ID_REGEX.test(traceId) &&\n        PARENT_ID_REGEX.test(parentId) &&\n        FLAGS_REGEX.test(flags);\n\n    if (!isValidParent) {\n        return null;\n    }\n\n    return {\n        traceId: traceId,\n        spanId: parentId,\n        traceFlags: parseInt(flags, 16),\n    };\n}\n\nfunction tryTraceParentHeader(carrier: unknown, getter: TextMapGetter, header: string) {\n    const traceParentHeader = getter.get(carrier, header);\n    if (!traceParentHeader) return null;\n    const traceParent = Array.isArray(traceParentHeader) ? traceParentHeader[0] : traceParentHeader;\n    if (typeof traceParent !== 'string') return null;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return null;\n    return spanContext;\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class AspectoHttpTraceContext implements TextMapPropagator {\n    inject(context: Context, carrier: unknown, setter: TextMapSetter) {\n        const spanContext = trace.getSpanContext(context);\n        if (!spanContext) return;\n\n        const traceParent = `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(\n            spanContext.traceFlags || TraceFlags.NONE\n        ).toString(16)}`;\n\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        setter.set(carrier, ASPECTO_TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    }\n\n    extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n        let spanContext = tryTraceParentHeader(carrier, getter, ASPECTO_TRACE_PARENT_HEADER);\n        if (!spanContext) {\n            spanContext = tryTraceParentHeader(carrier, getter, TRACE_PARENT_HEADER);\n            if (!spanContext) return context;\n        }\n\n        spanContext.isRemote = true;\n\n        const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            const state = Array.isArray(traceStateHeader) ? traceStateHeader.join(',') : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    }\n\n    fields(): string[] {\n        return [TRACE_PARENT_HEADER, ASPECTO_TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    }\n}\n"]}