{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/aspecto-resource/index.ts"],"names":[],"mappings":";;;AAEA,uGAA+E;AAC/E,2GAAoF;AACpF,qGAA8E;AAC9E,6FAAsE;AACtE,yDAAoD;AACpD,yEAAuE;AACvE,yDAAyD;AAE5C,QAAA,eAAe,GAAG,CAAC,UAAgC,EAAE,WAAiC,EAAY,EAAE;IAC7G,MAAM,QAAQ,GAAG,8DAAmB,CAAC;QACjC,SAAS,EAAE;YACP,mEAAsB;YACtB,6DAAmB;YACnB,qDAAe;YACf,IAAI,sCAAmB,CAAC,UAAU,EAAE,WAAW,CAAC;SACnD;KACJ,CAAC,CAAC;IACH,MAAM,sBAAsB,GAAG,oDAAyB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAElF,qDAAqD;IACrD,2EAA2E;IAC3E,OAAO,iCAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACxE,CAAC,CAAC;AAEF,uDAA6D;AAApD,2HAAA,uBAAuB,OAAA","sourcesContent":["import { Resource } from '@opentelemetry/resources';\nimport AspectoClientOptions from '../interfaces/AspectoClientOptions';\nimport { detectSyncResources } from 'opentelemetry-resource-detector-sync-api';\nimport { deploymentSyncDetector } from 'opentelemetry-resource-detector-deployment';\nimport { serviceSyncDetector } from 'opentelemetry-resource-detector-service';\nimport { gitSyncDetector } from 'opentelemetry-resource-detector-git';\nimport { notSetResource } from './not-set-resource';\nimport { sdkConfigOverrideResource } from './config-override-resource';\nimport { AspectoSyncDetector } from './aspecto-resource';\n\nexport const getOtelResource = (sdkOptions: AspectoClientOptions, fileOptions: AspectoClientOptions): Resource => {\n    const resource = detectSyncResources({\n        detectors: [\n            deploymentSyncDetector,\n            serviceSyncDetector,\n            gitSyncDetector,\n            new AspectoSyncDetector(sdkOptions, fileOptions),\n        ],\n    });\n    const aspectoConfigOverrides = sdkConfigOverrideResource(sdkOptions, fileOptions);\n\n    // we merge the resources in the order of precedence,\n    // so attributes are being overwritten later in the chain if they are found\n    return notSetResource.merge(resource).merge(aspectoConfigOverrides);\n};\n\nexport { NOT_SET_ATTRIBUTE_VALUE } from './not-set-resource';\n"]}