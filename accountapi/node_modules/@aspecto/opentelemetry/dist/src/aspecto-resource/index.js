"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NOT_SET_ATTRIBUTE_VALUE = exports.getOtelResource = void 0;
const opentelemetry_resource_detector_sync_api_1 = require("opentelemetry-resource-detector-sync-api");
const opentelemetry_resource_detector_deployment_1 = require("opentelemetry-resource-detector-deployment");
const opentelemetry_resource_detector_service_1 = require("opentelemetry-resource-detector-service");
const opentelemetry_resource_detector_git_1 = require("opentelemetry-resource-detector-git");
const not_set_resource_1 = require("./not-set-resource");
const config_override_resource_1 = require("./config-override-resource");
const aspecto_resource_1 = require("./aspecto-resource");
exports.getOtelResource = (sdkOptions, fileOptions) => {
    const resource = opentelemetry_resource_detector_sync_api_1.detectSyncResources({
        detectors: [
            opentelemetry_resource_detector_deployment_1.deploymentSyncDetector,
            opentelemetry_resource_detector_service_1.serviceSyncDetector,
            opentelemetry_resource_detector_git_1.gitSyncDetector,
            new aspecto_resource_1.AspectoSyncDetector(sdkOptions, fileOptions),
        ],
    });
    const aspectoConfigOverrides = config_override_resource_1.sdkConfigOverrideResource(sdkOptions, fileOptions);
    // we merge the resources in the order of precedence,
    // so attributes are being overwritten later in the chain if they are found
    return not_set_resource_1.notSetResource.merge(resource).merge(aspectoConfigOverrides);
};
var not_set_resource_2 = require("./not-set-resource");
Object.defineProperty(exports, "NOT_SET_ATTRIBUTE_VALUE", { enumerable: true, get: function () { return not_set_resource_2.NOT_SET_ATTRIBUTE_VALUE; } });
//# sourceMappingURL=index.js.map