{"version":3,"file":"config-override-resource.js","sourceRoot":"","sources":["../../../src/aspecto-resource/config-override-resource.ts"],"names":[],"mappings":";AAAA,+DAA+D;AAC/D,EAAE;AACF,0BAA0B;AAC1B,gFAAgF;AAChF,2BAA2B;AAC3B,yBAAyB;AACzB,EAAE;;;AAEF,wDAAoD;AACpD,8EAAiF;AAEjF,yDAA2D;AAC3D,6CAAqD;AAExC,QAAA,yBAAyB,GAAG,CACrC,UAAgC,EAChC,WAAiC,EACzB,EAAE;IACV,MAAM,UAAU,GAAG,EAAE,CAAC;IAEtB,yBAAyB;IACzB,6CAA6C;IAC7C,MAAM,mBAAmB,GAAG,wCAAqB,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,sBAAsB,CAAC,CAAC,CAAC,aAAa;IAChI,MAAM,mBAAmB,GAAG,wCAAqB,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IAChG,MAAM,gBAAgB,GAAG,mBAAmB,aAAnB,mBAAmB,cAAnB,mBAAmB,GAAI,mBAAmB,CAAC;IACpE,IAAI,gBAAgB,EAAE;QAClB,UAAU,CAAC,iDAA0B,CAAC,YAAY,CAAC,GAAG,gBAAgB,CAAC;KAC1E;IAED,2BAA2B;IAC3B,MAAM,sBAAsB,GAAG,wCAAqB,CAChD,UAAU,EACV,WAAW,EACX,gBAAgB,EAChB,yBAAyB,CAC5B,CAAC,CAAC,aAAa;IAChB,MAAM,sBAAsB,GAAG,wCAAqB,CAChD,UAAU,EACV,WAAW,EACX,gBAAgB,EAChB,sBAAsB,CACzB,CAAC;IACF,MAAM,mBAAmB,GAAG,sBAAsB,aAAtB,sBAAsB,cAAtB,sBAAsB,GAAI,sBAAsB,CAAC;IAC7E,IAAI,mBAAmB,EAAE;QACrB,UAAU,CAAC,iDAA0B,CAAC,eAAe,CAAC,GAAG,mBAAmB,CAAC;KAChF;IAED,eAAe;IACf,MAAM,WAAW,GAAG,wCAAqB,CAAC,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IACzF,IAAI,WAAW,EAAE;QACb,UAAU,CAAC,iDAA0B,CAAC,sBAAsB,CAAC,GAAG,WAAW,CAAC;KAC/E;IAED,2CAA2C;IAC3C,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;QAC7B,UAAU,CAAC,kCAAqB,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;KACjF;IAED,OAAO,IAAI,oBAAQ,CAAC,UAAU,CAAC,CAAC;AACpC,CAAC,CAAC","sourcesContent":["// check if a value is overwritten from various config sources.\n//\n// Order of precedence is:\n// 1. sdkOptions (the value supplied in code while initializing the Aspecto SDK)\n// 2. Environment variables\n// 3. Aspecto config file\n//\n\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport AspectoClientOptions from '../interfaces/AspectoClientOptions';\nimport { getAspectoConfigValue } from './aspecto-resource';\nimport { GitResourceAttributes } from './LabelNames';\n\nexport const sdkConfigOverrideResource = (\n    sdkOptions: AspectoClientOptions,\n    fileOptions: AspectoClientOptions\n): Resource => {\n    const attributes = {};\n\n    // override service name.\n    // packageName is for backward compatibility.\n    const overridePackageName = getAspectoConfigValue(sdkOptions, fileOptions, 'packageName', 'ASPECTO_PACKAGE_NAME'); // deprecated\n    const overrideServiceName = getAspectoConfigValue(sdkOptions, fileOptions, 'serviceName', null);\n    const finalServiceName = overrideServiceName ?? overridePackageName;\n    if (finalServiceName) {\n        attributes[SemanticResourceAttributes.SERVICE_NAME] = finalServiceName;\n    }\n\n    // override service version\n    const overridePackageVersion = getAspectoConfigValue(\n        sdkOptions,\n        fileOptions,\n        'packageVersion',\n        'ASPECTO_PACKAGE_VERSION'\n    ); // deprecated\n    const overrideServiceVersion = getAspectoConfigValue(\n        sdkOptions,\n        fileOptions,\n        'serviceVersion',\n        'OTEL_SERVICE_VERSION'\n    );\n    const finalServiceVersion = overrideServiceVersion ?? overridePackageVersion;\n    if (finalServiceVersion) {\n        attributes[SemanticResourceAttributes.SERVICE_VERSION] = finalServiceVersion;\n    }\n\n    // override env\n    const overrideEnv = getAspectoConfigValue(sdkOptions, fileOptions, 'env', 'ASPECTO_ENV');\n    if (overrideEnv) {\n        attributes[SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT] = overrideEnv;\n    }\n\n    // override git hash, only via env variable\n    if (process.env.ASPECTO_GITHASH) {\n        attributes[GitResourceAttributes.VCS_COMMIT_ID] = process.env.ASPECTO_GITHASH;\n    }\n\n    return new Resource(attributes);\n};\n"]}