"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidTokenError = void 0;
const socket_io_client_1 = require("socket.io-client");
class InvalidTokenError extends Error {
    constructor(token) {
        super(`The token you are trying to use (${token}) doesn't exist. Please retrieve a valid token from Aspecto website: https://app.aspecto.io/app/integration/api-key`);
        this.name = 'InvalidTokenError';
        this.token = token;
    }
}
exports.InvalidTokenError = InvalidTokenError;
class ConfigWS {
    constructor(host) {
        this.host = host;
    }
    disconnect() {
        var _a;
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.disconnect();
    }
    auth(token) {
        return new Promise((resolve, reject) => {
            try {
                this.socket = socket_io_client_1.io(this.host, {
                    query: { token },
                    transports: ['websocket'],
                    autoUnref: true,
                });
                this.socket.on('authenticated', function () {
                    this.token = token;
                    resolve(true);
                });
                this.socket.on('invalid-token', function () {
                    reject(new InvalidTokenError(token));
                });
                this.socket.on('error', function (err) {
                    reject(err);
                });
            }
            catch (err) {
                reject(err);
            }
        });
    }
    emit(event, ...args) {
        this.socket.emit(event, ...args);
    }
    on(event, cb) {
        this.socket.on(event, cb);
    }
}
exports.default = ConfigWS;
//# sourceMappingURL=ConfigWS.js.map