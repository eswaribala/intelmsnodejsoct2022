{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/config/index.ts"],"names":[],"mappings":";;;;;;;AACA,kDAAgC;AAChC,oEAA4C;AAC/B,QAAA,WAAW,SAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,mCAAI,2BAA2B,CAAC;AAC1F,mCAAkC;AAAzB,gGAAA,MAAM,OAAA;AACf,iDAA2D;AAAlD,+HAAA,OAAO,OAAiB;AACjC,iDAA2D;AAAlD,+HAAA,OAAO,OAAiB;AAEjC,MAAM,cAAc,GAAG,eAAW,CAAC,qBAAqB,CAAC,CAAC;AAE1D,wFAAwF;AACxF,MAAM,4BAA4B,GAAG,0CAA0C,CAAC;AAEhF,MAAM,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE;IAC/B,IAAI;QACA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QACb,OAAO,IAAI,CAAC;KACf;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,KAAK,CAAC;KAChB;AACL,CAAC,CAAC;AAEW,QAAA,wBAAwB,GAAG,CAAC,iBAAyB,EAAE,EAAE;IAClE,IAAI,qBAAqB,GAAG,4BAA4B,CAAC;IAEzD,IAAI,iBAAiB,EAAE;QACnB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE;YAChC,MAAM,IAAI,KAAK,CACX,GAAG,iBAAiB,0EAA0E,CACjG,CAAC;SACL;QACD,qBAAqB,GAAG,iBAAiB,CAAC;KAC7C;IAED,cAAc,CAAC,uBAAuB,qBAAqB,EAAE,CAAC,CAAC;IAC/D,OAAO,qBAAqB,CAAC;AACjC,CAAC,CAAC;AAEF,wFAAwF;AAC3E,QAAA,gBAAgB,GAAG,CAAC,OAA6B,EAAW,EAAE;IACvE,IAAI;QACA,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACvC,uBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACV,cAAc,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,gCAAgC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC9D,IAAI,OAAO,CAAC,MAAM;YAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;YAC7C,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC;KAChB;AACL,CAAC,CAAC;AAEW,QAAA,oBAAoB,GAAG,yCAAyC,CAAC","sourcesContent":["import AspectoClientOptions from '../interfaces/AspectoClientOptions';\nimport createDebug from 'debug';\nimport AspectoConfig from './aspectoConfig';\nexport const CONFIG_HOST = process.env.ASPECTO_CONFIG_HOST ?? 'https://config.aspecto.io';\nexport { isNode } from './isNode';\nexport { default as AspectoConfig } from './aspectoConfig';\nexport { default as ConfigService } from './ConfigService';\n\nconst logDebugConfig = createDebug('aspecto:init:config');\n\n// const defaultJaegerEndpoint = 'https://jaeger-collector.aspecto.io:443/api/v2/spans';\nconst defaultOtlpCollectorEndpoint = 'https://otelcol-fast.aspecto.io/v1/trace';\n\nconst isValidUrl = (url: string) => {\n    try {\n        new URL(url);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nexport const getOtlpCollectorEndpoint = (sendOtlpTrafficTo: string) => {\n    let otlpCollectorEndpoint = defaultOtlpCollectorEndpoint;\n\n    if (sendOtlpTrafficTo) {\n        if (!isValidUrl(sendOtlpTrafficTo)) {\n            throw new Error(\n                `${sendOtlpTrafficTo} is not a valid URL, no events will be sent to Open Telemetry collector.`\n            );\n        }\n        otlpCollectorEndpoint = sendOtlpTrafficTo;\n    }\n\n    logDebugConfig(`Collector endpoint: ${otlpCollectorEndpoint}`);\n    return otlpCollectorEndpoint;\n};\n\n// verify config is valid, and print a friendly message (no stack trace) if it's missing\nexport const initializeConfig = (options: AspectoClientOptions): boolean => {\n    try {\n        logDebugConfig('Started config init.');\n        AspectoConfig.init(options);\n        logDebugConfig('Config init success.');\n        return true;\n    } catch (err) {\n        logDebugConfig('Config init failure.', { err });\n        const message = `Aspecto configuration error: ${err.message}`;\n        if (options.logger) options.logger.error(message);\n        else console.warn(message);\n        return false;\n    }\n};\n\nexport const LIVE_FLOW_SOCKET_URL = 'https://live-flows.aspecto.io/socket.io';\n"]}