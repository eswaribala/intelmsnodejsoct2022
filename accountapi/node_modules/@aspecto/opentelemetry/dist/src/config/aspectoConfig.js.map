{"version":3,"file":"aspectoConfig.js","sourceRoot":"","sources":["../../../src/config/aspectoConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { getOtelResource } from '../aspecto-resource';\nimport { LabelNames } from '../aspecto-resource/LabelNames';\nimport AspectoClientOptions from '../interfaces/AspectoClientOptions';\nimport { fs } from '../utils/dynamic-require';\n\nconst loadJsonFile = (path: string) => {\n    try {\n        return JSON.parse(fs().readFileSync(path).toString());\n    } catch (err) {\n        return null;\n    }\n};\n\nconst envVariableToBoolean = (value?: string): boolean | undefined => {\n    if (value == null) {\n        return undefined;\n    }\n    return value !== '0' && value !== 'false';\n};\n\nclass AspectoConfig {\n    public token: string;\n    public samplingRatio: number;\n    public requireConfigForTraces: boolean;\n    public collectPayloads: boolean = true;\n    public sqsExtractContextPropagationFromPayload = true;\n\n    // exporter batch\n    public exportBatchSize: number;\n    public exportBatchTimeoutMs: number;\n\n    // b3 enabled options\n    public extractB3Context: boolean;\n    public injectB3ContextSingleHeader: boolean;\n    public injectB3ContextMultiHeader: boolean;\n\n    public jsonConfig: any;\n    public otelResource: Resource;\n\n    init(options?: AspectoClientOptions) {\n        this.jsonConfig = this.loadJsonConfig();\n\n        // Token\n        this.token =\n            options.aspectoAuth ?? process.env.ASPECTO_AUTH ?? this.jsonConfig.token ?? this.jsonConfig.aspectoAuth;\n        if (!this.token) {\n            throw new Error(`\n\n    Unable to retrieve Aspecto token.\n    In order for the Aspecto service to work, it requires an auth token.\n    Please provide it through ASPECTO_AUTH env param${\n        process.env.ASPECTO_TESTING_FRAMEWORK ? '' : ' OR aspectoAuth init option'\n    }.\n    Alternatively, you can add aspecto.json file with the next content {\"aspectoAuth\":\"-- token goes here --\"} to the root folder.\n    You can get the token from: https://app.aspecto.io/app/integration/api-key\n    For more details please check: https://docs.aspecto.io\n        `);\n        }\n\n        // Sampling Ratio\n        const samplingRatio =\n            options.samplingRatio ?? process.env.ASPECTO_SAMPLING_RATIO ?? this.jsonConfig.samplingRatio ?? 1.0;\n\n        this.samplingRatio = Number(samplingRatio);\n        if (isNaN(this.samplingRatio)) throw new Error(`Provided sampling ratio (${samplingRatio}) is not a number`);\n        if (typeof this.samplingRatio !== 'number' || this.samplingRatio < 0.0 || this.samplingRatio > 1.0)\n            throw new Error(`samplingRatio should be number in range [0.0, 1.0], received ${this.samplingRatio}`);\n\n        this.requireConfigForTraces =\n            options.requireConfigForTraces ??\n            envVariableToBoolean(process.env.ASPECTO_REQUIRE_CONFIG_FOR_TRACES) ??\n            this.jsonConfig.requireConfigForTraces ??\n            false;\n\n        this.collectPayloads =\n            options.collectPayloads ??\n            envVariableToBoolean(process.env.ASPECTO_COLLECT_PAYLOADS) ??\n            this.jsonConfig.collectPayloads ??\n            true;\n\n        this.sqsExtractContextPropagationFromPayload =\n            options.sqsExtractContextPropagationFromPayload ??\n            envVariableToBoolean(process.env.ASPECTO_SQS_EXTRACT_CONTEXT_PROPAGATION_FROM_PAYLOAD) ??\n            this.jsonConfig.sqsExtractContextPropagationFromPayload ??\n            true;\n\n        this.exportBatchSize =\n            options.exportBatchSize ?? +process.env.ASPECTO_EXPORT_BATCH_SIZE ?? this.jsonConfig.exportBatchSize ?? 100;\n        this.exportBatchTimeoutMs =\n            options.exportBatchTimeoutMs ??\n            options.exportBatchTimeout ??\n            +process.env.ASPECTO_EXPORT_BATCH_TIMEOUT_MS ??\n            this.jsonConfig.exportBatchTimeoutMs ??\n            1000;\n\n        this.extractB3Context =\n            options.extractB3Context ??\n            envVariableToBoolean(process.env.ASPECTO_EXTRACT_B3_CONTEXT) ??\n            this.jsonConfig.extractB3Context ??\n            false;\n\n        this.injectB3ContextSingleHeader =\n            options.injectB3ContextSingleHeader ??\n            envVariableToBoolean(process.env.ASPECTO_INJECT_B3_CONTEXT_SINGLE_HEADER) ??\n            this.jsonConfig.injectB3Context ??\n            false;\n\n        this.injectB3ContextMultiHeader =\n            options.injectB3ContextMultiHeader ??\n            envVariableToBoolean(process.env.ASPECTO_INJECT_B3_CONTEXT_MULTI_HEADER) ??\n            this.jsonConfig.injectB3ContextMultiHeader ??\n            false;\n\n        this.otelResource = getOtelResource(options, this.jsonConfig);\n    }\n\n    get serviceName(): string {\n        return this.otelResource.attributes[SemanticResourceAttributes.SERVICE_NAME] as string;\n    }\n\n    get serviceInstanceId(): string {\n        return this.otelResource.attributes[SemanticResourceAttributes.SERVICE_INSTANCE_ID] as string;\n    }\n\n    get deploymentEnvironment(): string | undefined {\n        return this.otelResource.attributes[SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT] as string;\n    }\n\n    get aspectoVersion(): string {\n        return this.otelResource.attributes[LabelNames.VERSION] as string;\n    }\n\n    private loadJsonConfig() {\n        return loadJsonFile('aspecto.json') ?? loadJsonFile(process?.argv[1] + '../aspecto.json') ?? {};\n    }\n}\n\nexport default new AspectoConfig();\n"]}