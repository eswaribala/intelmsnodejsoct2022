{"version":3,"file":"time.js","sourceRoot":"","sources":["../../src/time.ts"],"names":[],"mappings":";;;AAAA,2CAAyC;AAGzC,wGAAwG;AACxG,yFAAyF;AACzF,SAAgB,oBAAoB;IAChC,MAAM,IAAI,GAAG,wBAAW,CAAC,GAAG,EAAE,GAAG,wBAAW,CAAC,UAAU,CAAC;IACxD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IACvB,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;IACnC,OAAO,KAAK,CAAC;AACjB,CAAC;AALD,oDAKC;AAED,SAAgB,QAAQ,CAAC,MAAkB,EAAE,WAAmB;IAC5D,MAAM,OAAO,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;IAC5C,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC,GAAG,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;IACpE,OAAO,CAAC,OAAO,GAAG,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC/C,CAAC;AAND,4BAMC;AAED,oCAAoC;AACpC,oEAAoE;AACpE,SAAgB,cAAc,CAAC,MAAc;IACzC,MAAM,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;IAC3B,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAHD,wCAGC;AAED,SAAgB,aAAa,CAAC,KAAa;IACvC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IACzC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;IAC7C,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACzB,CAAC;AAJD,sCAIC","sourcesContent":["import { performance } from 'perf_hooks';\nimport * as api from '@opentelemetry/api';\n\n// we can't just convert hrtime to nanos because number (which is float64) only has 53 bits for mantissa\n// time delta is a number of millis, but it has a fractional part which represents micros\nexport function getTimeDeltaInMillis(): number {\n    const pnow = performance.now() + performance.timeOrigin;\n    const now = new Date();\n    const delta = now.getTime() - pnow;\n    return delta;\n}\n\nexport function addDelta(hrTime: api.HrTime, deltaMillis: number): api.HrTime {\n    const hrDelta = millisToHrTime(deltaMillis);\n    const seconds = hrTime[0] + hrDelta[0];\n    const totalNanos = hrTime[1] + hrDelta[1];\n    const [secondsFromNanos, nanos] = millisToHrTime(totalNanos * 1e-6);\n    return [seconds + secondsFromNanos, nanos];\n}\n\n// only usable for small time deltas\n// because of float64 limitations it loses precision for big numbers\nexport function millisToHrTime(millis: number): api.HrTime {\n    const nanos = millis * 1e6;\n    return nanosToHrTime(nanos);\n}\n\nexport function nanosToHrTime(nanos: number): api.HrTime {\n    const seconds = Math.floor(nanos * 1e-9);\n    const ns = Math.floor(nanos - seconds * 1e9);\n    return [seconds, ns];\n}\n"]}