{"version":3,"file":"bin.js","sourceRoot":"","sources":["../../src/bin.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { isCI } from 'ci-info';\nimport { gitRevParse, getGitConfig, getGitHead, getPushCommits, getGitBranch, isGitRepo } from './git.service';\nimport { getFooprintForGitHook } from './footprint';\nimport { LIVE_FLOWS_HOST } from './config';\nimport axios from 'axios';\n\ntype Action = 'install' | 'uninstall' | 'send-push-event';\n\nconst PKG_NAME = `@aspecto/opentelemetry`;\n// used to identify our part in the existing hook\nconst ASPECTO_HOOK_COMMENT = `# aspecto hook`;\nconst HOOK_NAME = 'pre-push';\nconst HOOK_TIMEOUT_MS = 5000;\n// leave 500ms to print the error message\naxios.defaults.timeout = HOOK_TIMEOUT_MS - 500;\nlet exitTimeoutId: NodeJS.Timeout;\n\n// npx with \"-p\" parameter will work even if package isn't installed or node_modules were removed\n// (which can happen in case of monorepo or when user runs 'rm -rf node_modules')\n// but it is always slower as it doesn't use pre-installed version, so we use it -p when possible.\nconst sendFpCommand = [\n    `if [ -f \"$PWD/node_modules/.bin/aspecto-otel-live\" ]; `,\n    `then npx aspecto-otel-live send-push-event &> aspecto.log || true ; `,\n    `else npx -p @aspecto/opentelemetry-diag aspecto-otel-live send-push-event &> aspecto.log || true ; fi `,\n    `${ASPECTO_HOOK_COMMENT}`,\n].join('');\n\nfunction getHookContent() {\n    return ['#!/bin/sh', sendFpCommand].join('\\n');\n}\n\nconst logger = {\n    info(msg: string, ...params: any[]) {\n        console.log(`${PKG_NAME} > ${msg}`, ...params);\n    },\n    error(msg: string, ...params: any[]) {\n        console.error(`${PKG_NAME} > ${msg}`, ...params);\n    },\n};\n\nfunction printUsage() {\n    logger.info(\"Usage: npx aspecto-otel-live <action>. Supported actions: 'instal', 'uninstal', 'send-push-event'.\");\n}\n\n// It may happen, that it's takes too much time to collect the data.\n// we don't want to make the user wait for it during 'git push', so we exit on timeout.\n// It is safer do to it like this for the whole process than just configuring axios timeouts.\nfunction exitOnTimeout(timeoutInMs: number) {\n    exitTimeoutId = setTimeout(() => {\n        console.log(`Exiting on timeout (${timeoutInMs}ms)`);\n        process.exit(1);\n    }, timeoutInMs);\n}\n\nfunction exit(code?: number) {\n    if (exitTimeoutId) {\n        clearTimeout(exitTimeoutId);\n    }\n    process.exit(code);\n}\n\nfunction run(): void {\n    exitOnTimeout(HOOK_TIMEOUT_MS);\n    if (process.argv.length < 3) {\n        printUsage();\n        exit();\n    }\n    exitIfShouldntRun();\n\n    const action = process.argv[2] as Action;\n\n    runAction(action)\n        .then(() => {\n            exit(0);\n        })\n        .catch(() => {\n            exit(1);\n        });\n}\n\nasync function runAction(action: string) {\n    try {\n        switch (action) {\n            case 'install':\n                runInstall();\n                logger.info('Done');\n                break;\n            case 'uninstall':\n                runUninstall();\n                logger.info('Done');\n                break;\n            case 'send-push-event':\n                await sendPushEvent();\n                logger.info('Done');\n                break;\n            default:\n                logger.info(`Unknown action: ${action}`);\n                printUsage();\n        }\n    } catch (err) {\n        logger.error(`Failed to execute ${action} action`, err);\n    }\n}\n\nfunction runInstall() {\n    const hookPath = getHookPath();\n    let newContent: string;\n\n    if (fs.existsSync(hookPath)) {\n        // husky and potentially some other hooks can exit from the hook before it reaches aspecto part (by executing exit command for example)\n        // in order to overcome that, we insert our part as a first non-comment line in the hook source code\n        const existingContent = fs.readFileSync(hookPath, { encoding: 'utf-8' });\n        const lines = existingContent.replace(/^.+# aspecto hook\\s*$/gim, '').split('\\n');\n        const firstNonCommentIdx = lines.findIndex((x) => !/^\\s*#/gi.test(x));\n        lines.splice(firstNonCommentIdx, 0, sendFpCommand, '\\n');\n        newContent = lines.join('\\n');\n    } else {\n        newContent = getHookContent();\n    }\n\n    fs.writeFileSync(hookPath, newContent);\n    fs.chmodSync(hookPath, 0o0755);\n}\n\nfunction runUninstall() {\n    const hookPath = getHookPath();\n    if (!fs.existsSync(hookPath)) return;\n    const existingContent = fs.readFileSync(hookPath, { encoding: 'utf-8' });\n    const newContent = existingContent.replace(/^.+# aspecto hook\\s*$/gim, '');\n    fs.writeFileSync(hookPath, newContent);\n}\n\nasync function sendPushEvent(): Promise<void> {\n    const footprint = await getFooprintForGitHook();\n    const gitConfig = getGitConfig();\n    const headSha = getGitHead();\n    const commits = getPushCommits(headSha);\n    const branch = getGitBranch();\n\n    await axios.post(`https://${LIVE_FLOWS_HOST}/api/git/events`, {\n        eventType: 'push',\n        headSha,\n        gitConfig,\n        footprint,\n        commits,\n        branch,\n    });\n}\n\nfunction exitIfShouldntRun(): void {\n    try {\n        if (['true', '1'].includes(process.env.ASPECTO_SKIP_HOOKS || '')) {\n            logger.info(`ASPECTO_SKIP_HOOKS is set, skipping...`);\n            exit(0);\n        }\n        if (isCI) {\n            logger.info(`CI environment detected, skipping...`);\n            exit(0);\n        }\n        if (!isGitRepo()) {\n            logger.info('Not a git repo, skipping...');\n            exit(0);\n        }\n    } catch (err) {\n        logger.error(`unhandled error, exiting...`, err);\n        exit(0);\n    }\n}\n\nfunction getHookPath(): string {\n    const cwd = process.cwd();\n    const { gitCommonDir } = gitRevParse(cwd);\n    const absoluteGitCommonDir = path.resolve(cwd, gitCommonDir);\n    const prePushHookPath = path.join(absoluteGitCommonDir, 'hooks', HOOK_NAME);\n    return prePushHookPath;\n}\n\nrun();\n"]}