{"version":3,"file":"footprint.js","sourceRoot":"","sources":["../../src/footprint.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAsC;AACtC,mCAQiB;AACjB,yCAQoB;AAEb,KAAK,UAAU,YAAY,CAAC,aAAmC;IAClE,IAAI,EAAa,CAAC;IAClB,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAChC,MAAM,MAAM,mCACL,aAAa,KAChB,EAAE,GACL,CAAC;IAEF,IAAI,mBAAa,EAAE,EAAE;QACjB,EAAE,GAAG,MAAM,kBAAkB,CAAC,MAAM,CAAC,CAAC;KACzC;SAAM;QACH,EAAE,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;KACvC;IAED,OAAO,EAAE,CAAC;AACd,CAAC;AAfD,oCAeC;AAEM,KAAK,UAAU,kBAAkB,CAAC,MAAqB;IAC1D,MAAM,WAAW,GAAG,MAAM,yBAAc,EAAE,CAAC;IAC3C,MAAM,OAAO,GAAG,qBAAU,EAAE,CAAC;IAC7B,MAAM,YAAY,GAAG,0BAAe,EAAE,CAAC;IACvC,MAAM,QAAQ,GAAG,sBAAW,EAAE,CAAC;IAC/B,0CAA0C;IAE1C,MAAM,SAAS,mCACR,MAAM,KACT,QAAQ,EAAE,gBAAQ,CAAC,MAAM,EACzB,WAAW;QACX,OAAO;QACP,QAAQ,EACR,YAAY,EAAE,EAAE,EAChB,YAAY,GACf,CAAC;IAEF,OAAO,SAAS,CAAC;AACrB,CAAC;AAlBD,gDAkBC;AAEM,KAAK,UAAU,gBAAgB,CAAC,MAAqB;IACxD,MAAM,SAAS,GAAG,MAAM,uBAAY,EAAE,CAAC;IACvC,MAAM,SAAS,GAAG,MAAM,yBAAc,EAAE,CAAC;IACzC,IAAI,UAAU,GAAa,EAAE,CAAC;IAE9B,IAAI,SAAS,EAAE;QACX,UAAU,GAAG,MAAM,0BAAe,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACtD;IAED,MAAM,SAAS,mCACR,MAAM,KACT,QAAQ,EAAE,gBAAQ,CAAC,IAAI,EACvB,SAAS;QACT,UAAU;QACV,SAAS,GACZ,CAAC;IAEF,OAAO,SAAS,CAAC;AACrB,CAAC;AAlBD,4CAkBC;AAEM,KAAK,UAAU,qBAAqB;IACvC,MAAM,SAAS,GAAG,MAAM,uBAAY,EAAE,CAAC;IACvC,MAAM,SAAS,GAAG,MAAM,yBAAc,EAAE,CAAC;IACzC,IAAI,UAAU,GAAa,EAAE,CAAC;IAE9B,IAAI,SAAS,EAAE;QACX,UAAU,GAAG,MAAM,0BAAe,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;KACrD;IAED,MAAM,SAAS,GAAqB;QAChC,QAAQ,EAAE,gBAAQ,CAAC,IAAI;QACvB,SAAS;QACT,UAAU;QACV,SAAS;KACZ,CAAC;IAEF,OAAO,SAAS,CAAC;AACrB,CAAC;AAjBD,sDAiBC","sourcesContent":["import checkIsDocker from 'is-docker';\nimport {\n    BaseFootprint,\n    BaseFootprintDetails,\n    Footprint,\n    DockerFootprint,\n    HostFootprint,\n    HostType,\n    GitHostFootprint,\n} from './types';\nimport {\n    getContainerId,\n    getCpuHash,\n    getSysStartTime,\n    getTotalMem,\n    checkHasDocker,\n    getContainerIds,\n    getMachineId,\n} from './sys-info';\n\nexport async function getFootprint(baseFpDetails: BaseFootprintDetails): Promise<Footprint> {\n    let fp: Footprint;\n    const ts = new Date().getTime();\n    const baseFp: BaseFootprint = {\n        ...baseFpDetails,\n        ts,\n    };\n\n    if (checkIsDocker()) {\n        fp = await getDockerFootprint(baseFp);\n    } else {\n        fp = await getHostFootprint(baseFp);\n    }\n\n    return fp;\n}\n\nexport async function getDockerFootprint(baseFp: BaseFootprint): Promise<DockerFootprint> {\n    const containerId = await getContainerId();\n    const cpuHash = getCpuHash();\n    const sysStartTime = getSysStartTime();\n    const totalMem = getTotalMem();\n    // const deviceHashes = getDeviceHashes();\n\n    const footprint: DockerFootprint = {\n        ...baseFp,\n        hostType: HostType.Docker,\n        containerId,\n        cpuHash,\n        totalMem,\n        deviceHashes: [],\n        sysStartTime,\n    };\n\n    return footprint;\n}\n\nexport async function getHostFootprint(baseFp: BaseFootprint): Promise<HostFootprint> {\n    const machineId = await getMachineId();\n    const hasDocker = await checkHasDocker();\n    let containers: string[] = [];\n\n    if (hasDocker) {\n        containers = await getContainerIds({ all: false });\n    }\n\n    const footprint: HostFootprint = {\n        ...baseFp,\n        hostType: HostType.Host,\n        hasDocker,\n        containers,\n        machineId,\n    };\n\n    return footprint;\n}\n\nexport async function getFooprintForGitHook(): Promise<GitHostFootprint> {\n    const machineId = await getMachineId();\n    const hasDocker = await checkHasDocker();\n    let containers: string[] = [];\n\n    if (hasDocker) {\n        containers = await getContainerIds({ all: true });\n    }\n\n    const footprint: GitHostFootprint = {\n        hostType: HostType.Host,\n        hasDocker,\n        containers,\n        machineId,\n    };\n\n    return footprint;\n}\n"]}