{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":";;;AAiBA,IAAY,QAGX;AAHD,WAAY,QAAQ;IAChB,6BAAiB,CAAA;IACjB,yBAAa,CAAA;AACjB,CAAC,EAHW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAGnB","sourcesContent":["export type InstanceId = string;\n\nexport type ExporterConfig = {\n    serviceName: string;\n    aspectoAuth: string;\n    instanceId: string;\n};\n\nexport interface SdkEvent {\n    type: string;\n    payload: any;\n}\n\nexport type OtelDiagInfo = {\n    instanceId: string;\n};\n\nexport enum HostType {\n    Docker = 'docker',\n    Host = 'host',\n}\n\nexport type BaseFootprintDetails = {\n    token: string;\n    instanceId: InstanceId;\n};\n\nexport type BaseFootprint = BaseFootprintDetails & {\n    ts: number;\n};\n\nexport type DockerFootprint = BaseFootprint & {\n    hostType: HostType.Docker;\n    sysStartTime: number;\n    containerId: string;\n    cpuHash: string;\n    totalMem: number;\n    deviceHashes: string[];\n};\n\nexport interface LogEvent {\n    id: string;\n    timestamp: number;\n    spanId: string;\n    traceId: string;\n    level: string;\n    message: string;\n    packageName: string;\n    args: string;\n}\n\nexport type HostFootprint = BaseFootprint & {\n    hostType: HostType.Host;\n    machineId: string;\n    hasDocker: boolean;\n    containers: string[];\n};\n\nexport type GitHostFootprint = {\n    hostType: HostType.Host;\n    machineId: string;\n    hasDocker: boolean;\n    containers: string[];\n};\n\nexport type Footprint = DockerFootprint | HostFootprint;\n\nexport interface IFootprintService {\n    getId(footprint: Footprint): InstanceId;\n}\n\nexport interface IFootprintMatchingService {\n    getServiceGroup(iid: InstanceId): InstanceId[];\n}\n"]}