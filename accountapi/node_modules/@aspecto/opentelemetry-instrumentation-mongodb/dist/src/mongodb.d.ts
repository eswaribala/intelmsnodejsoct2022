import type * as mongodb from 'mongodb';
import { MongoDbInstrumentationConfig } from './types';
import { InstrumentationBase, InstrumentationNodeModuleDefinition } from '@opentelemetry/instrumentation';
/** mongodb instrumentation plugin for OpenTelemetry */
export declare class MongoDBInstrumentation extends InstrumentationBase<typeof mongodb> {
    protected _config: MongoDbInstrumentationConfig;
    private moduleVersion;
    constructor(_config?: MongoDbInstrumentationConfig);
    init(): InstrumentationNodeModuleDefinition<typeof mongodb>[];
    private _getModulePatches;
    private _getWireProtocolPatches;
    /** Ends a created span. */
    private _getPatchCursorClose;
    /** Creates spans for common operations */
    private _getPatchOperation;
    /** Creates spans for command operation */
    private _getPatchCommand;
    /** Creates spans for find operation */
    private _getPatchFind;
    /** Creates spans for getMore operation */
    private _getPatchCursor;
    /**
     * Get the mongodb command type from the object.
     * @param command Internal mongodb command object
     */
    private _getCommandType;
    /**
     * Populate span's attributes by fetching related metadata from the context
     * @param span span to add attributes to
     * @param ns mongodb namespace
     * @param command mongodb internal representation of a command
     * @param topology mongodb internal representation of the network topology
     */
    private _populateAttributes;
    /**
     * Ends a created span.
     * @param span The created span to end.
     * @param resultHandler A callback function.
     */
    private _patchEnd;
    /**
     * Ends a created span.
     * @param span The created span to end.
     * @param resultHandler A callback function.
     * @param payload An aggregated payload.
     */
    private _patchEndAggregated;
    private _defaultDbStatementSerializer;
    private _defaultObjectSerializer;
    private _getStatement;
    private _applyResponseHook;
    private _applyGetMoreResponseHook;
    private _getCollectionNameByCommand;
}
//# sourceMappingURL=mongodb.d.ts.map