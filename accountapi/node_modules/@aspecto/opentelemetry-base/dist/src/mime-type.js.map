{"version":3,"file":"mime-type.js","sourceRoot":"","sources":["../../src/mime-type.ts"],"names":[],"mappings":";;;AAAA,MAAM,qBAAqB,GAAG;IAC1B,MAAM;IACN,qBAAqB;IACrB,kBAAkB;IAClB,qBAAqB;IACrB,iBAAiB;IACjB,mCAAmC;IACnC,iBAAiB;IACjB,mBAAmB;CACtB,CAAC;AAEW,QAAA,2BAA2B,GAAG,CAAC,QAAgB,EAAE,EAAE;IAC5D,IAAI;QACA,OAAO,CAAC,QAAQ,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3F;IAAC,WAAM;QACJ,OAAO,IAAI,CAAC;KACf;AACL,CAAC,CAAC","sourcesContent":["const allowedMimeTypePrefix = [\n    'text',\n    'multipart/form-data',\n    'application/json',\n    'application/ld+json',\n    'application/rtf',\n    'application/x-www-form-urlencoded',\n    'application/xml',\n    'application/xhtml',\n];\n\nexport const shouldCaptureBodyByMimeType = (mimeType: string) => {\n    try {\n        return !mimeType || allowedMimeTypePrefix.some((prefix) => mimeType.startsWith(prefix));\n    } catch {\n        return true;\n    }\n};\n"]}