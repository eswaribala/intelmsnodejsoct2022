"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamChunks = exports.MIN_COLLECTED_BODY_LENGTH = void 0;
// for body with at most this length, full body will be captured.
// for large body with more than this amount of bytes, we will
// collect at least this amount of bytes, but might truncate after it
exports.MIN_COLLECTED_BODY_LENGTH = 524288;
class StreamChunks {
    constructor() {
        this.chunks = [];
        this.length = 0;
    }
    addChunk(chunk) {
        if (this.length >= exports.MIN_COLLECTED_BODY_LENGTH)
            return;
        const chunkLength = chunk === null || chunk === void 0 ? void 0 : chunk.length;
        if (!chunkLength)
            return;
        this.chunks.push(chunk);
        this.length += chunkLength;
    }
    getBody() {
        return this.chunks.join('');
    }
}
exports.StreamChunks = StreamChunks;
//# sourceMappingURL=stream-chunks.js.map