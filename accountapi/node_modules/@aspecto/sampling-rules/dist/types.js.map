{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";;;AAAA,IAAY,MAGX;AAHD,WAAY,MAAM;IACd,kDAAwC,CAAA;IACxC,2CAAiC,CAAA;AACrC,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;AAED,IAAY,QAWX;AAXD,WAAY,QAAQ;IAChB,qBAAS,CAAA;IACT,qBAAS,CAAA;IACT,uCAA2B,CAAA;IAC3B,mCAAuB,CAAA;IACvB,iCAAqB,CAAA;IACrB,yCAA6B,CAAA;IAC7B,+BAAmB,CAAA;IACnB,+BAAmB,CAAA;IACnB,mCAAuB,CAAA;IACvB,uBAAW,CAAA;AACf,CAAC,EAXW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAWnB;AAYD,qFAAqF;AACrF,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IACxB,2GAAuF,CAAA;AAC3F,CAAC,EAFW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAE3B;AAaD,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,+BAAiB,CAAA;IACjB,qCAAuB,CAAA;AAC3B,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB","sourcesContent":["export enum Events {\n    GET_SAMPLING_RULES = 'get-sampling-rule',\n    SAMPLING_RULES = 'sampling-rules',\n}\n\nexport enum Operator {\n    EQ = 'eq',\n    NE = 'ne',\n    STARTS_WITH = 'starts_with',\n    ENDS_WITH = 'ends_with',\n    CONTAINS = 'contains',\n    NOT_CONTAINS = 'not_contains',\n    MATCHES = 'matches', // RegEx\n    DEFINED = 'defined',\n    UNDEFINED = 'undefined',\n    ANY = 'any',\n}\n\nexport interface ResourceCondition {\n    comparison: Operator;\n    value?: string;\n}\n\nexport interface Condition extends ResourceCondition {\n    from: 'attribute' | 'operation' | 'headers';\n    key: string;\n}\n\n// a list of currently supported \"features\" which a rule can configure on the context\nexport enum RulesContextKeys {\n    MESSAGING_SAMPLING_INHERIT_FROM_PUBLISHER = 'messaging.sampling.inherit_from_publisher',\n}\n\nexport interface LeanSamplingRule {\n    _id?: string;\n    packageName: ResourceCondition;\n    env: ResourceCondition;\n    samplingRate: number;\n    conditions: Condition[];\n\n    // each rule can defined a set of key values to add to the otel context\n    context?: Partial<Record<RulesContextKeys, unknown>>;\n}\n\nexport enum RuleSource {\n    MANUAL = 'manual',\n    AUTOMATIC = 'automatic',\n}\n\nexport interface SamplingRule extends LeanSamplingRule {\n    account: string;\n    active: boolean;\n    priority: number;\n    source: RuleSource;\n    createdBy: string;\n    updatedBy: string;\n}\n"]}