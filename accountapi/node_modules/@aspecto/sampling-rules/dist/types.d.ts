export declare enum Events {
    GET_SAMPLING_RULES = "get-sampling-rule",
    SAMPLING_RULES = "sampling-rules"
}
export declare enum Operator {
    EQ = "eq",
    NE = "ne",
    STARTS_WITH = "starts_with",
    ENDS_WITH = "ends_with",
    CONTAINS = "contains",
    NOT_CONTAINS = "not_contains",
    MATCHES = "matches",
    DEFINED = "defined",
    UNDEFINED = "undefined",
    ANY = "any"
}
export interface ResourceCondition {
    comparison: Operator;
    value?: string;
}
export interface Condition extends ResourceCondition {
    from: 'attribute' | 'operation' | 'headers';
    key: string;
}
export declare enum RulesContextKeys {
    MESSAGING_SAMPLING_INHERIT_FROM_PUBLISHER = "messaging.sampling.inherit_from_publisher"
}
export interface LeanSamplingRule {
    _id?: string;
    packageName: ResourceCondition;
    env: ResourceCondition;
    samplingRate: number;
    conditions: Condition[];
    context?: Partial<Record<RulesContextKeys, unknown>>;
}
export declare enum RuleSource {
    MANUAL = "manual",
    AUTOMATIC = "automatic"
}
export interface SamplingRule extends LeanSamplingRule {
    account: string;
    active: boolean;
    priority: number;
    source: RuleSource;
    createdBy: string;
    updatedBy: string;
}
